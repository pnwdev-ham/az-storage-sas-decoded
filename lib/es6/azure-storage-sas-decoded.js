import{decodeServiceTokenQueryString as n,arePermissionsInOrder as d}from"./sasTypes/service-sas-decode";import{SasTypeEnum as o}from"./results/sas-decoded-result";var i=function(){function a(){}return a.getSasType=function(e){return e?.ss?o.Account:e?.sks?o.UserDelegation:e?.sr?o.Service:o.Unexpected},a.decodeSasToken=function(e,t){var r={IncomingData:{SasToken:e},MetaData:{CorrectFormat:!1,DidDecode:!1,PermissionsInOrder:!1},ResultData:{SasType:o.Unknown,Options:t,SasDecoded:[],Properties:null},Errors:[]};return!e||!t||Object.keys(t).length===0?(e||r.Errors.push({message:"sasToken is empty",function:"AzureStorageSasDecoded::decodeSasToken"}),t||r.Errors.push({message:"sasTokenOptions is empty",function:"AzureStorageSasDecoded::decodeSasToken"}),Object.keys(t).length===0&&r.Errors.push({message:"sasTokenOptions has no keys",function:"AzureStorageSasDecoded::decodeSasToken"}),r):(r.ResultData.SasType=a.getSasType(t),r.ResultData.SasType===o.Service&&(r.MetaData.PermissionsInOrder=d(t.sp),r.MetaData.PermissionsInOrder||(r.MetaData.CorrectFormat=!1)),r.ResultData.Properties=n(t),r.MetaData.CorrectFormat=!0,r.MetaData.DidDecode=!0,r)},a}();export default i;